def DockerfilePath = ''
def PomfilePath = ''
def DockerBuildUrl = 'tcp://docker.cloud.local:2375'
def DockerRegistry = 'docker.cloud.local:4000'
def VuebuildCmd = 'npm install && npm run build:dev'
node('master'){
    if (isUnix()){
        stage('更新代码'){
            parallel '更新代码1':{
                def workspace=""
                    git branch: 'release/release-v0.1', credentialsId: 'a48d7c69-d87d-4652-bde3-abf5f4adee59', url: 'http://192.168.1.34:8080/mos/mos-open-service-project-web.git'
            }
        }
        
        stage('代码编译'){
            dir("$PomfilePath"){
                parallel '代码编译1':{
                    def buildCmd= "$VuebuildCmd"
                    sh buildCmd
                }
            }
        }
        stage('项目打包'){
            dir("$DockerfilePath"){
                parallel '项目打包1':{
                    def dockerServer="$DockerBuildUrl"
                    docker.withServer("$dockerServer"){
                        def Image = docker.build("$DockerRegistry/${env.JOB_NAME}:${env.BUILD_TIMESTAMP}${env.BUILD_ID}")
                        Image.push()
                        
                    }
                }
            }
        }
        stage('项目部署'){
            def k8s_host = 'root@192.168.10.43'
            def k8s_manifests = '/root/manifests/$JOB_NAME'
            def k8s_cmd = '/data/work/_app/k8s/kubernetes/bin/kubectl'
            
            println "修改k8s_deployment.yaml文件"
            sh "sed -i 's/'$DockerRegistry'/'$DockerRegistry'\\/'$JOB_NAME':'$BUILD_TIMESTAMP''$BUILD_ID'/g'  k8s_deployment.yaml"
            
            println "判断远程主机工作目录是否存在"
            Directory=sh(script:"ssh $k8s_host ls $k8s_manifests",returnStatus:true)
            if(Directory == 0){
                println "目录已创建"
            }else if(Directory == 2){
                println "目录未创建"
                println "执行创建工作目录: $k8s_manifests"
                sh(script:"ssh $k8s_host mkdir $k8s_manifests",returnStatus:true)
            }
            
            println "拷贝k8s的yaml文件到远程主机"
            sh "scp k8s_deployment.yaml k8s_svc.yaml $k8s_host:$k8s_manifests"
            
            println "执行创建服务"
            sh "ssh $k8s_host $k8s_cmd apply -f $k8s_manifests/ || true" 
        }
    }
}